@page "/module/{moduleId:long}/newjob"
@inherits NewJobBase

<Title value="PARCS | New job"></Title>

@if (IsLoading)
{
    <div class="spinner"></div>
}
else
{
    <div class="page-wrapper">
        <div class="content">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h4 class="page-title">Create a job</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <EditForm Model="@CreateJobViewModel" OnValidSubmit="@(async () => await CreateJobAsync())">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        @if (HostErrors.Any())
                        {
                            <div class="alert alert-danger">
                                <ul>
                                    @foreach (var error in HostErrors)
                                    {
                                        foreach (var errorMessage in error.Value)
                                        {
                                            <li>@error.Key: @errorMessage</li>
                                        }
                                    }
                                </ul>
                            </div>
                        }
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Assembly <span class="text-danger">*</span></label>
                                    <select id="select-assembly" class="form-control select" title="Choose from the list...">
                                        <option selected disabled>Choose from the list...</option>
                                        @foreach (var assembly in Module.Assemblies)
                                        {
                                            <option value="@assembly.Name">@assembly.Name</option>
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => CreateJobViewModel.AssemblyName)" />
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Class <span class="text-danger">*</span></label>
                                    <select id="select-class" class="form-control select" title="Choose from the list...">
                                        <option selected disabled>Choose from the list...</option>
                                        @foreach (var className in Module.Assemblies.FirstOrDefault(a => a.Name == CreateJobViewModel.AssemblyName)?.IModuleImplementations ?? Enumerable.Empty<string>())
                                        {
                                            <option value="@className">@className</option>
                                        }
                                    </select>
                                    <ValidationMessage For="@(() => CreateJobViewModel.AssemblyName)" />
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Input files </label>
                                    <InputFile OnChange="OnFileChanged" multiple></InputFile>
                                </div>
                            </div>
                        </div>
                        <div class="m-t-20 text-center">
                            <button class="btn btn-primary submit-btn">Submit</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    [JSInvokable("Select2_ChangeAssembly")]
    public void ChangeAssembly(string assemblyName)
    {
        CreateJobViewModel.AssemblyName = assemblyName;
        StateHasChanged();
    }

    [JSInvokable("Select2_ChangeClass")]
    public void ChangeClass(string className)
    {
        CreateJobViewModel.ClassName = className;
    }
}