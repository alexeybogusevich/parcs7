version: '3.4'

services:
  parcs.daemon:
    image: ${DOCKER_REGISTRY-}parcsdaemon
    build:
      context: .
      dockerfile: Parcs.Daemon/Dockerfile
    volumes:
      - type: volume
        source: parcs.storage
        target: /var/lib/storage
    networks:
      - parcsnet
    depends_on:
      - parcs.hostapi

  parcs.hostapi:
    image: ${DOCKER_REGISTRY-}parcshostapi
    build:
      context: .
      dockerfile: Parcs.Host/Dockerfile
    volumes:
      - type: volume
        source: parcs.storage
        target: /var/lib/storage
    networks:
      - parcsnet
    depends_on:
      - parcs.database

  parcs.portal:
    image: ${DOCKER_REGISTRY-}parcsportal
    build:
      context: .
      dockerfile: Parcs.Portal/Dockerfile
    networks:
      - parcsnet
    depends_on:
      - parcs.hostapi
      - datadog-agent

  parcs.database:
    image: postgres:latest
    restart: always
    volumes:
      - parcs.database:/var/lib/postgresql/data/
    networks:
      - parcsnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  datadog-agent:
    image: "gcr.io/datadoghq/agent:latest"
    environment:
      DD_APM_ENABLED: "true"
      DD_APM_NON_LOCAL_TRAFFIC: "true"
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: "true"
      DD_API_KEY: "2262af34d5d5f801e79e7de39c19f9d3"
      DD_LOG_LEVEL: "DEBUG"
      DD_HOSTNAME: "parcs"
      DD_SITE: "datadoghq.eu"
    volumes:
    - type: volume
      source: datadog-storage
      target: /etc/datadog-agent
    networks:
      - parcsnet

volumes:
  parcs.database:
  parcs.storage:
  datadog-storage:

networks:
  parcsnet:
    driver: bridge